{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","logo.svg","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","styled","td","Button","button","TdControls","TdName","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","className","class","handleTransaction","Table","table","CoinList","coinData","map","key","handleAddBalance","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleBalanceToggle","Head","header","Img","img","H1","h1","Header","src","logo","alt","Component","Content","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3253f665.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinRow = styled.td`\r\nborder: 3px solid;\r\n    width: 14vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\nwidth: 64px;\r\nborder-radius: 8px;\r\nmargin: 3px 5px 0;\r\n`;\r\n\r\nconst TdControls = styled(CoinRow)`\r\n    width: 34vw;\r\n`;\r\n\r\nconst TdName = styled(CoinRow)`\r\n    width: 24vw;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n    const  handleRefresh = (event) => {\r\n        // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n\r\n        props.handleRefresh(props.tickerId);\r\n    }  \r\n\r\n    const  handleBuy = (event) => {\r\n        // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n\r\n        props.handleTransaction(true, props.tickerId);\r\n    }  \r\n\r\n    const  handleSell = (event) => {\r\n        // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n\r\n        props.handleTransaction(false, props.tickerId);\r\n    }  \r\n\r\n    const buttonClass1 = 'btn ' + 'btn-outline-warning';\r\n\r\n        return (\r\n            <tr>\r\n              <TdName>{props.name}</TdName>\r\n              <CoinRow>{props.ticker}</CoinRow>\r\n              <CoinRow>${props.price}</CoinRow>\r\n              <CoinRow>{props.showBalance ? props.balance : '-'}</CoinRow>\r\n              <TdControls>\r\n                  <form action=\"#\" method=\"POST\">\r\n                <Button \r\n                    onClick={handleRefresh}\r\n                    className={buttonClass1}>\r\n                        <i class=\"fas fa-sync-alt\"></i>\r\n                </Button>\r\n                <Button \r\n                    onClick={handleBuy}\r\n                    className='btn btn-success'>\r\n                        Buy\r\n                </Button>\r\n                <Button \r\n                    onClick={handleSell}\r\n                    className='btn btn-danger'>\r\n                        Sell\r\n                </Button>\r\n                  </form>            \r\n              </TdControls>\r\n            </tr>\r\n           );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport Coin from \"../Coin/Coin\";\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  font-size: 1rem;\r\n`;\r\nexport default function CoinList(props) {\r\n    \r\n  return (\r\n<Table className =' ' >\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Ticker</th>\r\n      <th>Price</th>\r\n      <th>Balance</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {\r\n      props.coinData.map( ({key, name, ticker, balance, price}) => \r\n      <Coin key={key} \r\n      tickerId={key}\r\n      handleRefresh={props.handleRefresh} \r\n      handleTransaction={props.handleTransaction}\r\n      handleAddBalance={props.handleAddBalance}\r\n      name={name} \r\n      ticker={ticker} \r\n      showBalance={props.showBalance}\r\n      balance={balance}\r\n      price={price}\r\n        />,\r\n      )\r\n    }\r\n  </tbody>\r\n</Table>\r\n  )\r\n    \r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n    line-height: 3rem;\r\n    display: inline-block;\r\n    `;\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 1.5rem;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\nborder-radius: 12px;\r\nmargin: 0 8px;\r\n`;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\nwidth: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\nexport default function AccountBalance(props) {\r\n    const buttonText= props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = '\\u00A0';\r\n    if (props.showBalance) {\r\n        content = <>{ formatter.format(props.amount) }</>\r\n    }\r\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-outline-warning' : 'btn-outline-light');\r\n    const buttonClass1 = 'btn ' + 'btn-outline-success';\r\n    return (\r\n    <>\r\n    <Balance> {content} </Balance>\r\n        <Section>\r\n             \r\n            <BalanceToggleButton \r\n                onClick={props.handleBalanceToggle}\r\n                className={buttonClass}>\r\n                {buttonText}\r\n            </BalanceToggleButton>\r\n            <Button \r\n                onClick={props.handleAddBalance} \r\n                className={buttonClass1}>\r\n                  Funnel $1200  <i class=\"fas fa-funnel-dollar\"></i>\r\n            </Button>\r\n        </Section>\r\n    </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from '../../logo.svg';\r\n\r\nconst Head = styled.header`\r\nbackground-color: #282c34;\r\n  min-height: 10rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  font-size: 36px;\r\n`;\r\n\r\nconst Img = styled.img`\r\nheight: 8rem;\r\npointer-events: none;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\nfont-size: 3rem;\r\nline-height:8rem;\r\nfont-weight bold;\r\nmin width: 300px;\r\n`;\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <Head>\r\n           <Img src={logo} alt=\"React logo\" />\r\n            <H1>\r\n              Coin Exchange \r\n            </H1>\r\n          </Head>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport Header from './components/Header/Header';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootswatch/dist/vapor/bootstrap.min.css';\r\n\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\nconst Content = styled.div`\r\ntext-align: center;\r\n  background-color: rgb(82, 79, 79);\r\n  color: rgb(180, 178, 19);\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\n\r\nfunction App(props) {\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(false)\r\n  const [coinData, setCoinData] = useState([]); \r\n\r\nconst componentDidMount = async () => {\r\n  const response = await axios.get('https://api.coinpaprika.com/v1/coins');\r\n  const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n  const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/'\r\n  const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n  const coinData = await Promise.all(promises);   \r\n  const coinPriceData = coinData.map(function(response) {\r\n    const coin = response.data;\r\n    return {\r\n      key: coin.id,\r\n      name: coin.name,\r\n      ticker: coin.symbol,\r\n      balance: 0,\r\n      price: formatPrice(coin.quotes.USD.price),\r\n    };\r\n  })\r\n  // Retrieve the prices    \r\n  setCoinData(coinPriceData);\r\n  }\r\n\r\n  useEffect(function() {\r\n    if (coinData.length === 0 ) {\r\n     componentDidMount();\r\n    } \r\n  });\r\n\r\n  const handleRefresh = async (valueChangeId) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\r\n    let response = await axios.get(tickerUrl);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map( function( values ) {\r\n      let newValues = {...values};\r\n      if (valueChangeId === values.key) {\r\n        newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n    });\r\n  \r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n  const handleTransaction = (isBuy, valueChangeId) => {\r\n    var balanceChange = isBuy ? 1 : -1;\r\n    const newCoinData = coinData.map( function(values) {\r\n      let newValues = {...values};\r\n      if ( valueChangeId == values.key) {\r\n        newValues.balance += balanceChange;\r\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(newCoinData)\r\n  }\r\n\r\n  const   handleBalanceToggle = () => {\r\n       setShowBalance(oldValue => !oldValue);\r\n     }\r\n\r\n     const handleAddBalance = () => {\r\n      setBalance( oldBalance => oldBalance + 1200 );\r\n   }\r\n\r\n    return (\r\n      <Content>\r\n        <Header />\r\n        <AccountBalance amount={balance}\r\n          showBalance={showBalance}\r\n          handleBalanceToggle={handleBalanceToggle} \r\n          handleAddBalance={handleAddBalance}/>\r\n       <CoinList coinData={coinData}\r\n        handleRefresh={handleRefresh}\r\n        handleTransaction={handleTransaction}\r\n        showBalance={showBalance}\r\n        handleAddBalance={handleAddBalance} />\r\n      </Content>\r\n    );\r\n  \r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}